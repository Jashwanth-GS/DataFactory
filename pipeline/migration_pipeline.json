{
	"name": "migration_pipeline",
	"properties": {
		"activities": [
			{
				"name": "data from s3 to blob",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "employeesbucket//"
					},
					{
						"name": "Destination",
						"value": "freecontainer//"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AmazonS3ReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@variables('folderName')",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "froms3bucket",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "@variables('fileName')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "toblobstorage",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "@variables('fileName')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Getting file names from blob",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "data from s3 to blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "fromblob",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach file in blob",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Getting file names from blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Getting file names from blob').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "data from blob to sql database",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "freecontainer/employeesData/"
								},
								{
									"name": "Destination",
									"value": ".@{item().Name}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "employeesData",
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "SqlServerSink",
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "fromblob",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SqlServerTable1",
									"type": "DatasetReference",
									"parameters": {
										"tableName": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"fileName": {
				"type": "String"
			},
			"folderName": {
				"type": "String"
			}
		},
		"annotations": []
	}
}